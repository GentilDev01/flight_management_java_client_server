/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Service.CustomerService;
import Service.FlightService;
import Service.TicketService;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Customer;
import model.Flight;
import model.Ticket;

/**
 *
 * @author ingab
 */
public class TicketForm extends javax.swing.JInternalFrame {
    DefaultTableModel tableModel = new DefaultTableModel();
    DefaultTableModel tableModelticket = new DefaultTableModel();
    /**
     * Creates new form TicketForm
     */
    public TicketForm() {
        initComponents();
        addTicketTableColumnsHeaderCustomer();
        addTicketTableRowDataCustomer();
        addTableColumnsHeaderFlight();
        addTableRowDataFlight();
        try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        TicketService service = (TicketService) theregistry.lookup("ticket");

        ticketNoTxt.setText(service.AutoTicketNo());
        } catch (Exception e) {
            e.printStackTrace();
    }
        
    }
   
    private void addTicketTableColumnsHeaderCustomer(){        
        tableModelticket.addColumn("TicketNO");
        tableModelticket.addColumn("FlightNo");
        tableModelticket.addColumn("CustomerId");
        
        TicketTable.setModel(tableModelticket);
    }
    
    private void addTicketTableRowDataCustomer(){
        tableModelticket.setRowCount(0);
        try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        TicketService service = (TicketService) theregistry.lookup("ticket");
    



        List<Ticket> tickets = new ArrayList<>();
        tickets =  service.retrieveTickets();
        for(Ticket theticket: tickets){
            tableModelticket.addRow(new Object[]{
                theticket.getTicketNo(),
                theticket.getTheflight().getFlightNo(),
                theticket.getThecustomer().getCustomer_id(),
                });
        }
         } catch (Exception e) {
    }
    }
    private void addTableColumnsHeaderFlight(){        
        tableModel.addColumn("FlightNo");
        tableModel.addColumn("Origin");
        tableModel.addColumn("Destination");
        tableModel.addColumn("date");
        tableModel.addColumn("DepartureTime");
        tableModel.addColumn("ArrivalTime");
        tableModel.addColumn("Price");
        FlightTable.setModel(tableModel);
    }
    
    private void addTableRowDataFlight(){
        tableModel.setRowCount(0);
        try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        FlightService service = (FlightService) theregistry.lookup("flight");

        List<Flight> flights = new ArrayList<>();
        flights =  service.retrieveFlights();
        for(Flight theflight: flights){
            tableModel.addRow(new Object[]{
                theflight.getFlightNo(),
                theflight.getSource(),
                theflight.getDestination(),
                theflight.getDate(),
                theflight.getDeparture(),
                theflight.getArrival(),
                theflight.getPrice(),
                });
        }
         } catch (Exception e) {
             e.printStackTrace();
    }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        BookTicketPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        searchCust = new javax.swing.JButton();
        customerIdTxt = new javax.swing.JTextField();
        flightTxt = new javax.swing.JTextField();
        ArrivalTxt = new javax.swing.JTextField();
        priceTxt = new javax.swing.JTextField();
        customerFnameTxt = new javax.swing.JLabel();
        CustomerLnameTxt = new javax.swing.JLabel();
        dateTxt = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        departureTxt = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        FlightTable = new javax.swing.JTable();
        jLabel61 = new javax.swing.JLabel();
        ticketNoTxt = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        sourceTxt = new javax.swing.JTextField();
        destinationTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TicketTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        bookTicketBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(1100, 670));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(1200, 710));

        BookTicketPanel.setBackground(new java.awt.Color(0, 102, 102));
        BookTicketPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        BookTicketPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Ticket Management");
        BookTicketPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, -1, -1));

        jPanel7.setBackground(new java.awt.Color(0, 102, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 255, 255));
        jLabel46.setText("Customer ID:");
        jPanel7.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 35, -1, -1));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("First Name: ");
        jPanel7.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 80, -1, -1));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 255, 255));
        jLabel48.setText("Last Name :");
        jPanel7.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 153, -1, -1));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 255, 255));
        jLabel49.setText("Flight No: ");
        jPanel7.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 232, -1, -1));

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(255, 255, 255));
        jLabel51.setText("Flight Date");
        jPanel7.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setText("Arrival Time");
        jPanel7.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(255, 255, 255));
        jLabel53.setText("Price");
        jPanel7.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        searchCust.setText("search");
        searchCust.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustActionPerformed(evt);
            }
        });
        jPanel7.add(searchCust, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        customerIdTxt.setBackground(new java.awt.Color(0, 102, 102));
        customerIdTxt.setForeground(new java.awt.Color(255, 255, 255));
        customerIdTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel7.add(customerIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 100, 30));

        flightTxt.setBackground(new java.awt.Color(0, 102, 102));
        flightTxt.setForeground(new java.awt.Color(255, 255, 255));
        flightTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel7.add(flightTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 180, -1));

        ArrivalTxt.setBackground(new java.awt.Color(0, 102, 102));
        ArrivalTxt.setForeground(new java.awt.Color(255, 255, 255));
        ArrivalTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel7.add(ArrivalTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 180, -1));

        priceTxt.setBackground(new java.awt.Color(0, 102, 102));
        priceTxt.setForeground(new java.awt.Color(255, 255, 255));
        priceTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel7.add(priceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 180, -1));
        jPanel7.add(customerFnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 90, 20));
        jPanel7.add(CustomerLnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 90, 20));
        jPanel7.add(dateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 120, 20));

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 255, 255));
        jLabel54.setText("Departure Time :");
        jPanel7.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, -1, -1));

        departureTxt.setBackground(new java.awt.Color(0, 102, 102));
        departureTxt.setForeground(new java.awt.Color(255, 255, 255));
        departureTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel7.add(departureTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 180, -1));

        BookTicketPanel.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 360, 570));

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        FlightTable.setBackground(new java.awt.Color(0, 102, 102));
        FlightTable.setForeground(new java.awt.Color(255, 255, 255));
        FlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        FlightTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FlightTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(FlightTable);

        jPanel8.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 300, 360));

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(255, 255, 255));
        jLabel61.setText("Ticket No");
        jPanel8.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, -1, -1));

        ticketNoTxt.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        ticketNoTxt.setForeground(new java.awt.Color(255, 255, 255));
        ticketNoTxt.setText("jLabel53");
        jPanel8.add(ticketNoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 255, 255));
        jLabel63.setText("Origin");
        jPanel8.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 255, 255));
        jLabel64.setText("Destination");
        jPanel8.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        sourceTxt.setBackground(new java.awt.Color(0, 102, 102));
        sourceTxt.setForeground(new java.awt.Color(255, 255, 255));
        sourceTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        sourceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceTxtActionPerformed(evt);
            }
        });
        jPanel8.add(sourceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 138, -1));

        destinationTxt.setBackground(new java.awt.Color(0, 102, 102));
        destinationTxt.setForeground(new java.awt.Color(255, 255, 255));
        destinationTxt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel8.add(destinationTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 140, -1));

        TicketTable.setBackground(new java.awt.Color(0, 102, 102));
        TicketTable.setForeground(new java.awt.Color(255, 255, 255));
        TicketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TicketTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TicketTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TicketTable);

        jPanel8.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 360, 370));

        jButton1.setBackground(new java.awt.Color(255, 255, 0));
        jButton1.setText("Print Report");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 540, 290, 50));

        BookTicketPanel.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 710, 630));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bookTicketBtn.setText("Book");
        bookTicketBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookTicketBtnActionPerformed(evt);
            }
        });
        jPanel1.add(bookTicketBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 5, 80, 60));

        resetBtn.setText("Clear");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel1.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 5, 90, 60));

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, 110, 70));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 90, 70));

        BookTicketPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 600, 360, 70));

        jScrollPane1.setViewportView(BookTicketPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1141, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchCustActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustActionPerformed
        // TODO add your handling code here:
        if(customerIdTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Empty field","Field required",JOptionPane.ERROR_MESSAGE);
        }
        else if(customerIdTxt.getText().length() != 5){
             JOptionPane.showMessageDialog(this, "Length must be 5 chars long","Field required",JOptionPane.ERROR_MESSAGE);
        }
        else{
            try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        CustomerService service = (CustomerService) theregistry.lookup("customer");

            Customer cust1 = new Customer(customerIdTxt.getText());
            Customer cust = new Customer();
            cust = service.searchCustomer(cust1);
            if(cust == null){
                 JOptionPane.showMessageDialog(this, "Customer Does not exist","Result",JOptionPane.ERROR_MESSAGE);
            }
            else{
                customerIdTxt.setEditable(false);
                customerFnameTxt.setText(cust.getFname());
                CustomerLnameTxt.setText(cust.getLname());
            }
            } catch (Exception e) {
                e.printStackTrace();
    }    
            
        }
    }//GEN-LAST:event_searchCustActionPerformed

    private void FlightTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FlightTableMouseClicked
        // TODO add your handling code here:
         int i = FlightTable.getSelectedRow();
        TableModel model = FlightTable.getModel();

        flightTxt.setText(model.getValueAt(i, 0).toString());
        sourceTxt.setText(model.getValueAt(i, 1).toString());
        destinationTxt.setText(model.getValueAt(i, 2).toString());
        dateTxt.setText(model.getValueAt(i, 3).toString());
        
        departureTxt.setText(model.getValueAt(i, 4).toString());
        ArrivalTxt.setText(model.getValueAt(i, 5).toString());
        priceTxt.setText(model.getValueAt(i, 6).toString());
//        createBtn.setEnabled(false);
    }//GEN-LAST:event_FlightTableMouseClicked

    private void sourceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sourceTxtActionPerformed

    private void bookTicketBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookTicketBtnActionPerformed
        // TODO add your handling code here:
        
    String ticketNo = ticketNoTxt.getText();
    String customerId = customerIdTxt.getText();
    String flightNo = flightTxt.getText();
    // Get other relevant information...
    Flight flight = new Flight(flightNo);
    Customer cust = new Customer(customerId);

    // Create a Ticket object
    Ticket ticket = new Ticket(ticketNo, flight, cust);

    // Call the TicketDao to book the ticket
    
    try{
        Registry thereRegistry = LocateRegistry.getRegistry("127.0.0.7",6000);
        TicketService service =(TicketService) thereRegistry.lookup("ticket");
        
    
    String bookingResult = service.registerTicket(ticket);

    // Check the result and update UI accordingly
    if ("Ticket Booked Successfully".equals(bookingResult)) {
        
        
        
        JOptionPane.showMessageDialog(this, "Ticket booked successfully!","reulst",JOptionPane.INFORMATION_MESSAGE);
        addTicketTableRowDataCustomer(); 
        resetBtnActionPerformed(evt);
    } else {
        // Optionally, show an error message if booking fails.
        JOptionPane.showMessageDialog(this,  bookingResult,"Result", JOptionPane.INFORMATION_MESSAGE);
        resetBtnActionPerformed(evt);
    }
    }
    catch(Exception ex){
            ex.printStackTrace();
            }
        
    }//GEN-LAST:event_bookTicketBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
         if (customerIdTxt.getText().trim().isEmpty() || flightTxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Customer ID and Flight No are required fields.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        
    }
         String ticketNo = ticketNoTxt.getText();
    String customerId = customerIdTxt.getText();
    String flightNo = flightTxt.getText();
    // Get other relevant information...

    // Create a Ticket object
    Customer cust1 = new Customer(customerId);
    Flight flight1 = new Flight(flightNo);
    Ticket ticket = new Ticket(ticketNo, flight1, cust1);
    try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        TicketService service = (TicketService) theregistry.lookup("ticket");
    

    // Call the TicketDao to update the ticket
    String updateResult = service.updateTicket(ticket);
    
    if ("Ticket updated Successfully".equals(updateResult)) {

        addTicketTableRowDataCustomer(); 
      
        JOptionPane.showMessageDialog(this, "Ticket updated successfully!","Result",JOptionPane.INFORMATION_MESSAGE);
    } else {

        JOptionPane.showMessageDialog(this,  updateResult,"Result" , JOptionPane.INFORMATION_MESSAGE);
        addTicketTableRowDataCustomer();
        resetBtnActionPerformed(evt);
    }
    } catch (Exception e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        customerIdTxt.setText("");
       flightTxt.setText("");
       ArrivalTxt.setText("");
       priceTxt.setText("");
       customerFnameTxt.setText("");
       CustomerLnameTxt.setText("");
       dateTxt.setText("");
       departureTxt.setText("");
       bookTicketBtn.setEnabled(true);
       
       try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        TicketService service = (TicketService) theregistry.lookup("ticket");
        ticketNoTxt.setText(service.AutoTicketNo());
        
     } catch (Exception e) {
         e.printStackTrace();
    }
       
       sourceTxt.setText("");
       destinationTxt.setText("");

       // Enable any disabled text fields
       customerIdTxt.setEditable(true);

       // Clear table selections
       FlightTable.clearSelection();
       TicketTable.clearSelection();

    }//GEN-LAST:event_resetBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
    try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        TicketService service = (TicketService) theregistry.lookup("ticket");
        
    if (ticketNoTxt.getText().compareTo(service.AutoTicketNo()) == 0) {
        JOptionPane.showMessageDialog(this, "Please first search the Ticket", "Empty Field", JOptionPane.ERROR_MESSAGE);
    } else if (sourceTxt.getText().trim().isEmpty() || destinationTxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please first search the flight", "Empty Field", JOptionPane.ERROR_MESSAGE);
    } else if ( departureTxt.getText().trim().isEmpty() || ArrivalTxt.getText().trim().isEmpty() || priceTxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please Fill All Fields", "Empty Fields", JOptionPane.ERROR_MESSAGE);
        resetBtnActionPerformed(evt);
    } else {
        Ticket ticket = new Ticket();
        ticket.setTicketNo(ticketNoTxt.getText());
        String feedback = service.deleteTicket(ticket);
        JOptionPane.showMessageDialog(this, feedback, "Result", JOptionPane.INFORMATION_MESSAGE);
        resetBtnActionPerformed(evt);
        addTableRowDataFlight();
    }
     } catch (Exception e) {
         e.printStackTrace();
    }
    
    
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void TicketTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TicketTableMouseClicked
        // TODO add your handling code here:
        try{
            
         TableModel model = TicketTable.getModel();
        int i = TicketTable.getSelectedRow();
        String flightId = model.getValueAt(i, 2).toString();
        if(flightId == null  || model.getValueAt(i, 2).toString() == null){
            return;
        }
        
        else{
            
             Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
            CustomerService cservice = (CustomerService) theregistry.lookup("customer");
            FlightService fservice1 = (FlightService) theregistry.lookup("flight");
            
    Customer cust = new Customer();
    Flight flight = new Flight();
//    CustomerDao custdao = new CustomerDao();
//    FlightDao flightdao = new FlightDao();

    cust.setCustomer_id(model.getValueAt(i, 2).toString());
    flight.setFlightNo(model.getValueAt(i, 1).toString());
    flight = fservice1.searchFlight(flight);
    cust = cservice.searchCustomer(cust);

    ticketNoTxt.setText(model.getValueAt(i, 0).toString());
    flightTxt.setText(flight.getFlightNo());
    
    destinationTxt.setText(flight.getDestination());
    sourceTxt.setText(flight.getSource());
    departureTxt.setText(flight.getDeparture());
    ArrivalTxt.setText(flight.getArrival());

    String date = flight.getDate();                
    

    priceTxt.setText(flight.getPrice().toString());
    customerIdTxt.setText(cust.getCustomer_id());
    customerFnameTxt.setText(cust.getFname());
    CustomerLnameTxt.setText(cust.getLname());
    dateTxt.setText(date);

    bookTicketBtn.setEnabled(false);
        }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    
    }//GEN-LAST:event_TicketTableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Flights");
        MessageFormat footer = new MessageFormat("End");
        try{
                PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
                set.add(OrientationRequested.PORTRAIT);
                FlightTable.print(JTable.PrintMode.FIT_WIDTH,header,footer,true,set, true);
                

        }catch(Exception e){
          e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ArrivalTxt;
    private javax.swing.JPanel BookTicketPanel;
    private javax.swing.JLabel CustomerLnameTxt;
    private javax.swing.JTable FlightTable;
    private javax.swing.JTable TicketTable;
    private javax.swing.JButton bookTicketBtn;
    private javax.swing.JLabel customerFnameTxt;
    private javax.swing.JTextField customerIdTxt;
    private javax.swing.JLabel dateTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField departureTxt;
    private javax.swing.JTextField destinationTxt;
    private javax.swing.JTextField flightTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchCust;
    private javax.swing.JTextField sourceTxt;
    private javax.swing.JLabel ticketNoTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
