/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Service.CustomerService;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Customer;

/**
 *
 * @author ingab
 */
public class CustomerForm extends javax.swing.JInternalFrame {
    DefaultTableModel tableModel = new DefaultTableModel();
    /**
     * Creates new form CustomerForm
     */
    public CustomerForm() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        try {
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
            CustomerService service = (CustomerService) theregistry.lookup("customer");
            
            custIdtxt.setText(service.autoGenerateCustomerId());            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        addTableColumnsHeaderCustomer();
        addTableRowDataCustomer();
    }
    
    private void addTableColumnsHeaderCustomer(){        
        tableModel.addColumn("CustomerId");
        tableModel.addColumn("fname");
        tableModel.addColumn("lname");
        tableModel.addColumn("gender");
        tableModel.addColumn("phoneNumber");
        tableModel.addColumn("PassportNo");
        tableModel.addColumn("DOB");
        tableModel.addColumn("Nationality");    
        tableModel.addColumn("Email"); 
        CustomerTable.setModel(tableModel);
    }
    
    private void addTableRowDataCustomer(){
        tableModel.setRowCount(0);
        try {
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
            CustomerService service = (CustomerService) theregistry.lookup("customer");
        
            List<Customer> customers = new ArrayList<>();
            customers =  service.retrieveCustomers();
        for(Customer thecustomer: customers){
            tableModel.addRow(new Object[]{
                thecustomer.getCustomer_id(),
                thecustomer.getFname(),
                thecustomer.getLname(),
                thecustomer.getGender(),
                thecustomer.getPhoneNo(),
                thecustomer.getPasssportNo(),
                thecustomer.getDob(),
                thecustomer.getNationality(),
                thecustomer.getEmail()                
                });
        }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lnameTxt = new javax.swing.JTextField();
        fnameTxt = new javax.swing.JTextField();
        passportTxt = new javax.swing.JTextField();
        nationalityTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        phoneTxt = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();
        custIdtxt = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        genderCombo = new javax.swing.JComboBox<String>();
        searchIdTxt = new javax.swing.JTextField();
        dateTxt = new com.toedter.calendar.JDateChooser();

        setPreferredSize(new java.awt.Dimension(1100, 670));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("First Name");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer ID: ");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Last Name");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Gender");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Email :");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, -1, -1));

        jLabel7.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Phone NO :");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, -1, -1));

        jLabel8.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DOB :");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 340, -1, -1));

        jLabel9.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Passport No :");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Nationality");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, -1, -1));
        jPanel3.add(lnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 200, 30));
        jPanel3.add(fnameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 200, 30));
        jPanel3.add(passportTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 200, -1));
        jPanel3.add(nationalityTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 490, 190, 30));
        jPanel3.add(emailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 190, 30));
        jPanel3.add(phoneTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 200, 30));

        CustomerTable.setBackground(new java.awt.Color(0, 102, 102));
        CustomerTable.setForeground(new java.awt.Color(255, 255, 255));
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(CustomerTable);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 600, -1));

        custIdtxt.setForeground(new java.awt.Color(255, 255, 255));
        custIdtxt.setText("XXXXX");
        jPanel3.add(custIdtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 120, 20));

        registerBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(51, 153, 0));
        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });
        jPanel3.add(registerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 560, 120, -1));

        updateBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(51, 153, 0));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel3.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 560, 140, -1));

        deleteBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(51, 153, 0));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel3.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 610, 120, -1));

        resetBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        resetBtn.setForeground(new java.awt.Color(51, 153, 0));
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel3.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 610, 140, -1));

        searchBtn.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(0, 0, 204));
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel3.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 540, -1, 50));

        genderCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "M", "F" }));
        jPanel3.add(genderCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 200, -1));
        jPanel3.add(searchIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 550, 170, -1));
        jPanel3.add(dateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 200, -1));

        jScrollPane2.setViewportView(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1036, Short.MAX_VALUE)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed

//        CustomerDao dao = new CustomerDao();
        passportTxt.setText("");
        fnameTxt.setText("");
        lnameTxt.setText("");
        phoneTxt.setText("");
        dateTxt.setDate(null);
        genderCombo.setSelectedIndex(-1);
        emailTxt.setText("");
        nationalityTxt.setText("");
        try {
             Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
            CustomerService service = (CustomerService) theregistry.lookup("customer");
            
            custIdtxt.setText(service.autoGenerateCustomerId());
            
        } catch (Exception e) {
        }
        
        registerBtn.setEnabled(true);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed

        // TODO add your handling code here:
        
        if(fnameTxt.getText().trim().isEmpty() || lnameTxt.getText().trim().isEmpty() || dateTxt == null || dateTxt.getDate().toString().trim().isEmpty() || emailTxt.getText().trim().isEmpty() || nationalityTxt.getText().trim().isEmpty() || phoneTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Fill All Fields Please","EMpty Fields",JOptionPane.ERROR_MESSAGE);
            registerBtnActionPerformed(evt);
        }
        else if(!emailTxt.getText().matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")){
            JOptionPane.showMessageDialog(this, "Invalid email", "Error", JOptionPane.ERROR_MESSAGE);
            resetBtnActionPerformed(evt);
        }
        else if((phoneTxt.getText().length() >= 10 && phoneTxt.getText().length() < 14) && passportTxt.getText().length() == 8 ){
            
//        CustomerDao dao = new CustomerDao();
        Customer cust =  new Customer();
            try {
                Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
                 CustomerService service = (CustomerService) theregistry.lookup("customer");
                 cust.setCustomer_id(service.autoGenerateCustomerId());
            } catch (Exception e) {
            }
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        cust.setDob(sdf.format(dateTxt.getDate()));
        cust.setFname(fnameTxt.getText());
        cust.setLname(lnameTxt.getText());
        cust.setGender(genderCombo.getSelectedItem().toString());
        cust.setNationality(nationalityTxt.getText());
        cust.setEmail(emailTxt.getText());
        cust.setPasssportNo(passportTxt.getText());
        cust.setPhoneNo(phoneTxt.getText());
//        String feedback = date;
            try {
                Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
                 CustomerService service = (CustomerService) theregistry.lookup("customer");
                  String feedback = service.registerCustomer(cust);
                  
                if(feedback.equalsIgnoreCase("Customer updated Successifully")){
                JOptionPane.showMessageDialog(this, feedback, "FeedBack",JOptionPane.INFORMATION_MESSAGE);
                addTableRowDataCustomer();
                resetBtnActionPerformed(evt);
               }
               else{
                   JOptionPane.showMessageDialog(this, feedback,"Feedback",JOptionPane.ERROR_MESSAGE);
                   resetBtnActionPerformed(evt);
              }
            } catch (Exception e) {
            }
       
        }
        else{
            JOptionPane.showMessageDialog(this, "the length of passport is 8\nThe phone number is 10","Error", JOptionPane.ERROR_MESSAGE);
        }
    
    }//GEN-LAST:event_registerBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        if(fnameTxt.getText().trim().isEmpty() || lnameTxt.getText().trim().isEmpty() || dateTxt == null || dateTxt.getDate().toString().trim().isEmpty() || emailTxt.getText().trim().isEmpty() || nationalityTxt.getText().trim().isEmpty() || phoneTxt.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please Fill All Fields Please","EMpty Fields",JOptionPane.ERROR_MESSAGE);
            registerBtnActionPerformed(evt);
        }
        else if(!emailTxt.getText().matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")){
            JOptionPane.showMessageDialog(this, "Invalid email", "Error", JOptionPane.ERROR_MESSAGE);
            resetBtnActionPerformed(evt);
        }
        else if(phoneTxt.getText().length() >= 10 && phoneTxt.getText().length() < 14 && passportTxt.getText().length() == 8 ){
//        CustomerDao dao = new CustomerDao();
        Customer cust =  new Customer();
        cust.setCustomer_id(custIdtxt.getText());
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        cust.setDob(sdf.format(dateTxt.getDate()));
        cust.setFname(fnameTxt.getText());
        cust.setLname(lnameTxt.getText());
        cust.setGender(genderCombo.getSelectedItem().toString());
        cust.setNationality(nationalityTxt.getText());
        cust.setEmail(emailTxt.getText());
        cust.setPasssportNo(passportTxt.getText());
        cust.setPhoneNo(phoneTxt.getText());
//        String feedback = date;
        try {
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
            CustomerService service = (CustomerService) theregistry.lookup("customer");

        
        String feedback = service.updateCustomer(cust);
        if(feedback.equalsIgnoreCase("Customer Registerd Successifully")){
             JOptionPane.showMessageDialog(this, feedback, "FeedBack",JOptionPane.INFORMATION_MESSAGE);
             addTableRowDataCustomer();
             resetBtnActionPerformed(evt);
        }
        else{
            JOptionPane.showMessageDialog(this, feedback,"Feedback",JOptionPane.ERROR_MESSAGE);
            addTableRowDataCustomer();
            resetBtnActionPerformed(evt);
        }
        } catch (Exception e) {
        }
        
        }
        else{
            JOptionPane.showMessageDialog(this, "the length of passport is 8\nThe phone number is 10","Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void CustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseClicked
        // TODO add your handling code here:
         int i = CustomerTable.getSelectedRow();
        TableModel model = CustomerTable.getModel();

        custIdtxt.setText(model.getValueAt(i, 0).toString());
        fnameTxt.setText(model.getValueAt(i, 1).toString());
        lnameTxt.setText(model.getValueAt(i, 2).toString());
        genderCombo.setSelectedItem(model.getValueAt(i, 3).toString());
        phoneTxt.setText(model.getValueAt(i, 4).toString());
        passportTxt.setText(model.getValueAt(i, 5).toString());
        String dob = model.getValueAt(i, 6).toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date dobDate = sdf.parse(dob);
            dateTxt.setDate(dobDate);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        nationalityTxt.setText(model.getValueAt(i, 7).toString());
        emailTxt.setText(model.getValueAt(i, 8).toString());
        
    }//GEN-LAST:event_CustomerTableMouseClicked

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        try {
            if (searchIdTxt.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Id ", "Empty Field", JOptionPane.ERROR_MESSAGE);
            }
            else if(searchIdTxt.getText().length() != 5){
                JOptionPane.showMessageDialog(this, "Id must be 5 characters ", "Length of Id Error", JOptionPane.ERROR_MESSAGE);
            }
            else {
                // Assuming Customer is your model class
                Customer customer = new Customer();
                try {
                    Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
                 CustomerService service = (CustomerService) theregistry.lookup("customer");
                    
//                CustomerDao customerDao = new CustomerDao();
                customer.setCustomer_id(searchIdTxt.getText());
                customer = service.searchCustomer(customer);
                
                if (customer == null) {
                    JOptionPane.showMessageDialog(this, "Id does not Exist", "Result", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // Populate data from the model to the text fields
                    custIdtxt.setText(customer.getCustomer_id());
                    fnameTxt.setText(customer.getFname());
                    lnameTxt.setText(customer.getLname());
                    genderCombo.setSelectedItem(customer.getGender());
                    phoneTxt.setText(customer.getPhoneNo());
                    passportTxt.setText(customer.getPasssportNo());
                    
                    // Parse and set the date value in the JDateChooser
                    String dob = customer.getDob();
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    try {
                        Date dobDate = sdf.parse(dob);
                        dateTxt.setDate(dobDate);
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }

                    nationalityTxt.setText(customer.getNationality());
                    emailTxt.setText(customer.getEmail());
                    registerBtn.setEnabled(false);
                }
                 } catch (Exception e) {
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:\
        
          Customer customer = new Customer();
          try {
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
            
            CustomerService service = (CustomerService) theregistry.lookup("customer");
        
//          CustomerDao customerdao = new CustomerDao();

          String id = service.autoGenerateCustomerId();
          customer.setCustomer_id(custIdtxt.getText());
          if(id.equals(custIdtxt.getText())){
              JOptionPane.showMessageDialog(this, "Please First Search For the Id","Error",JOptionPane.ERROR_MESSAGE);
          }
          else{
          int  option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this customer ?", "Confirm ", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
          if(option == JOptionPane.YES_OPTION){
          String feedback = service.deleteCustomer(customer);
          JOptionPane.showMessageDialog(this, feedback, "Result", JOptionPane.INFORMATION_MESSAGE);
          addTableRowDataCustomer();
          }
          resetBtnActionPerformed(evt);
          }
          } catch (Exception e) {
        }
    }//GEN-LAST:event_deleteBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CustomerTable;
    private javax.swing.JLabel custIdtxt;
    private com.toedter.calendar.JDateChooser dateTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JTextField fnameTxt;
    private javax.swing.JComboBox<String> genderCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lnameTxt;
    private javax.swing.JTextField nationalityTxt;
    private javax.swing.JTextField passportTxt;
    private javax.swing.JTextField phoneTxt;
    private javax.swing.JButton registerBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchIdTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
