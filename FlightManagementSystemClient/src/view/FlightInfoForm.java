/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Service.FlightService;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.Flight;

/**
 *
 * @author ingab
 */
public class FlightInfoForm extends javax.swing.JInternalFrame {
    DefaultTableModel tableModel = new DefaultTableModel();
    /**
     * Creates new form FlightForm
     */
    public FlightInfoForm() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        FlightService service = (FlightService) theregistry.lookup("flight");
     
        flightTxt.setText(service.autoGenerateFlightNo());
        addTableColumnsHeaderFlight();
        addTableRowDataFlight();
        } catch (Exception e) {
    }
        
    }
    
    private void addTableColumnsHeaderFlight(){        
        tableModel.addColumn("FlightNo");
        tableModel.addColumn("Origin");
        tableModel.addColumn("Destination");
        tableModel.addColumn("date");
        tableModel.addColumn("DepartureTime");
        tableModel.addColumn("ArrivalTime");
        tableModel.addColumn("Price");
        FlightTable.setModel(tableModel);
    }
    
    private void addTableRowDataFlight(){
        tableModel.setRowCount(0);
        try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        FlightService service = (FlightService) theregistry.lookup("flight");
    
        List<Flight> flights = new ArrayList<>();
        flights =  service.retrieveFlights();
        for(Flight theflight: flights){
            tableModel.addRow(new Object[]{
                theflight.getFlightNo(),
                theflight.getSource(),
                theflight.getDestination(),
                theflight.getDate(),
                theflight.getDeparture(),
                theflight.getArrival(),
                theflight.getPrice(),
                });
        }
         } catch (Exception e) {
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        dateTxt = new com.toedter.calendar.JDateChooser();
        sourceTxt = new javax.swing.JTextField();
        destinationTxt = new javax.swing.JTextField();
        priceTxt = new javax.swing.JTextField();
        departureTxt = new javax.swing.JTextField();
        ArrivalTxt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        FlightTable = new javax.swing.JTable();
        createBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        flightTxt = new javax.swing.JLabel();
        resetBtn = new javax.swing.JButton();
        searchIdTxt = new javax.swing.JTextField();

        setBackground(new java.awt.Color(205, 245, 253));
        setMinimumSize(new java.awt.Dimension(1100, 670));

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel33.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Flight No");
        jPanel5.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 112, -1, -1));

        jLabel34.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Source");
        jPanel5.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 167, -1, -1));

        jLabel35.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Destination");
        jPanel5.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 234, -1, -1));

        jLabel36.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Date");
        jPanel5.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 316, -1, -1));

        jLabel37.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Departure time");
        jPanel5.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 372, -1, -1));

        jLabel38.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("Arrival Time");
        jPanel5.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 441, -1, -1));

        jLabel39.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("Flight Price:");
        jPanel5.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 514, -1, -1));
        jPanel5.add(dateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 304, 156, -1));
        jPanel5.add(sourceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 167, 156, -1));
        jPanel5.add(destinationTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 234, 156, -1));
        jPanel5.add(priceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 508, 156, -1));
        jPanel5.add(departureTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 372, 156, -1));
        jPanel5.add(ArrivalTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 435, 156, -1));

        FlightTable.setBackground(new java.awt.Color(0, 102, 102));
        FlightTable.setForeground(new java.awt.Color(255, 255, 255));
        FlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        FlightTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FlightTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(FlightTable);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 620, 420));

        createBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });
        jPanel5.add(createBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 120, 70));

        updateBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel5.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 580, 130, 70));

        deleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel5.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, 120, 70));

        searchBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        jPanel5.add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, -1, 40));

        flightTxt.setForeground(new java.awt.Color(255, 255, 255));
        flightTxt.setText("jLabel1");
        jPanel5.add(flightTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 108, 156, 20));

        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });
        jPanel5.add(resetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 690, 130, 70));
        jPanel5.add(searchIdTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 230, -1));

        jScrollPane1.setViewportView(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1170, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 980, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        // TODO add your handling code here:
        if (sourceTxt.getText().trim().isEmpty() || destinationTxt.getText().trim().isEmpty() || dateTxt == null || dateTxt.getDate() == null || dateTxt.getDate().toString().trim().isEmpty() || priceTxt.getText().trim().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please Fill All Fields Please", "Empty Fields", JOptionPane.ERROR_MESSAGE);
    } else {
        try {
            Flight flight = new Flight();
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
            FlightService service = (FlightService) theregistry.lookup("flight");
//            flight.setFlightNo(fligh);
            flight.setFlightNo(service.autoGenerateFlightNo());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

            flight.setDate(sdf.format(dateTxt.getDate()));
            flight.setSource(sourceTxt.getText());
            flight.setDestination(destinationTxt.getText());
            flight.setDeparture(departureTxt.getText());  // Assuming you have a departureTxt field in your form
            flight.setArrival(ArrivalTxt.getText());  // Assuming you have an arrivalTimeTxt field in your form
            flight.setPrice(Double.parseDouble(priceTxt.getText()));

            String feedback = service.registerFlight(flight);

            if (feedback.equalsIgnoreCase("Flight Added Successfully")) {
                JOptionPane.showMessageDialog(this, feedback, "Feedback", JOptionPane.INFORMATION_MESSAGE);
                addTableRowDataFlight();
                resetBtnActionPerformed(evt);
            } else {
                JOptionPane.showMessageDialog(this, feedback, "Feedback", JOptionPane.INFORMATION_MESSAGE);
                addTableRowDataFlight();
                resetBtnActionPerformed(evt);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }



    }//GEN-LAST:event_createBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        // TODO add your handling code here:
        try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        FlightService service = (FlightService) theregistry.lookup("flight");

        sourceTxt.setText("");
        destinationTxt.setText("");
        departureTxt.setText("");  // Assuming you have a departureTxt field in your form
        ArrivalTxt.setText("");  // Assuming you have an arrivalTimeTxt field in your form
        dateTxt.setDate(null);
        priceTxt.setText("");
        flightTxt.setText("");  // Assuming you have a flightNoTxt field in your form

        flightTxt.setText(service.autoGenerateFlightNo());
        createBtn.setEnabled(true);
         } catch (Exception e) {
    }
    }//GEN-LAST:event_resetBtnActionPerformed

    private void FlightTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FlightTableMouseClicked
        // TODO add your handling code here:
        
        int i = FlightTable.getSelectedRow();
        TableModel model = FlightTable.getModel();

        flightTxt.setText(model.getValueAt(i, 0).toString());
        sourceTxt.setText(model.getValueAt(i, 1).toString());
        destinationTxt.setText(model.getValueAt(i, 2).toString());
        String date = model.getValueAt(i, 3).toString();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date flightDate = sdf.parse(date);
            dateTxt.setDate(flightDate);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        departureTxt.setText(model.getValueAt(i, 4).toString());
        ArrivalTxt.setText(model.getValueAt(i, 5).toString());
        priceTxt.setText(model.getValueAt(i, 6).toString());
        createBtn.setEnabled(false);

        
    }//GEN-LAST:event_FlightTableMouseClicked

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        try {
            
        if (searchIdTxt.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter Flight Number ", "Empty Field", JOptionPane.ERROR_MESSAGE);
        } else {
            Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
            FlightService service = (FlightService) theregistry.lookup("flight");
            Flight flight = new Flight();
            flight.setFlightNo(searchIdTxt.getText());
            flight = service.searchFlight(flight);

            if (flight == null) {
                JOptionPane.showMessageDialog(this, "Flight not found", "Result", JOptionPane.INFORMATION_MESSAGE);
            } else {
                // Populate data from the model to the text fields
                flightTxt.setText(flight.getFlightNo());
                sourceTxt.setText(flight.getSource());
                destinationTxt.setText(flight.getDestination());

                // Parse and set the date value in the JDateChooser
                String date = flight.getDate();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                try {
                    Date flightDate = sdf.parse(date);
                    dateTxt.setDate(flightDate);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }

                departureTxt.setText(flight.getDeparture());
                ArrivalTxt.setText(flight.getArrival());
                priceTxt.setText(flight.getPrice().toString());
                createBtn.setEnabled(false);

                // Additional code based on your form structure
            }
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        Flight flight = new Flight();
     try {
         Registry theregistry = LocateRegistry.getRegistry("127.0.0.1", 6000);
        
        FlightService service = (FlightService) theregistry.lookup("flight");

    String id = service.autoGenerateFlightNo();
    flight.setFlightNo(flightTxt.getText());

    if (id.equals(flightTxt.getText())) {
        JOptionPane.showMessageDialog(this, "Please First Search For the Flight", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this flight?", "Confirm ", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (option == JOptionPane.YES_OPTION) {
            String feedback = service.deleteFlight(flight);
            JOptionPane.showMessageDialog(this, feedback, "Result", JOptionPane.INFORMATION_MESSAGE);
            addTableRowDataFlight();
        }

        resetBtnActionPerformed(evt);
    }
    } catch (Exception e) {
    }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
       

        
    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ArrivalTxt;
    private javax.swing.JTable FlightTable;
    private javax.swing.JButton createBtn;
    private com.toedter.calendar.JDateChooser dateTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField departureTxt;
    private javax.swing.JTextField destinationTxt;
    private javax.swing.JLabel flightTxt;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField priceTxt;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchIdTxt;
    private javax.swing.JTextField sourceTxt;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
